@font-face {
    font-family: 'HelveticaCYBold';
    src: url('fnt/HelveticaCYBold.otf');
    font-weight: normal;
    font-style: normal;

}
@font-face {
    font-family: 'HelveticaCYPlain';
    src: url('fnt/HelveticaCYPlain.otf');
    font-weight: normal;
    font-style: normal;

}

$breakpoint: 500px;
$ratioGeneral: 0.50;

$mainPadding: 30px;
$mainPaddingBottom: 24px;
$fieldPadding: 30px;
$fieldPaddingBottom: 24px;
$fieldLineHeight: 40px;
$fieldHeight: $fieldLineHeight + 2* $fieldPadding;

$fontSizeDefault: 2px;
$fontSize0: 12;
$fontSize1: 16;
$fontSize2: 19;
$fontSize3: 24;
$fontSize4: 27;
$fontSize5: 48;

$fontFamilyPlain: "HelveticaCYPlain";
$fontFamilyBold: "HelveticaCYBold";

$menuBackground: #1f1f23;
$extendMenuBackground: #484856;
$backgrounds: ( Dark  #242426 , 
 	 	        Light #2d2d30 ,
				Green #58a618 ,
				Black black );

$blue: #186699;
$red: #bf4e39;
$green: #69ad40;
$darkGreen: #134d2c;
$purpel: #3d1c45;
$grey: #7e7e83;
$orange: #d1523a;
$yellow: #FC0;
$shadow: rgba(0,0,0,0.3);

//				name url width height xPosition yPosition nbIcon
$header-icons: (licensing			'assets/hub_icons.png' 66px 66px 2 3 5,
				  dates				'assets/hub_icons.png' 66px 66px 2 4 5,
				  certifications	'assets/hub_icons.png' 66px 66px 3 1 5, 
				  dropLoads			'assets/hub_icons.png' 66px 66px 1 3 5,
				  liveLoads			'assets/hub_icons.png' 66px 66px 1 4 5,
				  acceptanceRates	'assets/hub_icons.png' 66px 66px 2 1 5,
				  payStubs			'assets/hub_icons.png' 66px 66px 3 2 5,
				  safety			'assets/hub_icons.png' 66px 66px 3 3 5,
				  training			'assets/hub_icons.png' 66px 66px 3 4 5,
				  fuel				'assets/hub_icons.png' 66px 66px 2 2 5);

$icons:		  	(menu			'assets/hub_icons.png' 		66px  66px  0 0 5,
				update			'assets/hub_icons.png' 		66px  66px  1 0 5,
				back			'assets/hub_icons.png' 		66px  66px  3 0 5,
				dashboard		'assets/hub_icons.png' 		66px  66px  0 1 5,
				payStubs		'assets/hub_icons.png' 		66px  66px  0 3 5,
				safety			'assets/hub_icons.png' 		66px  66px  0 4 5,
				settings		'assets/hub_icons.png' 		66px  66px  1 1 5,
				changePassword  'assets/hub_icons.png' 		66px  66px  1 1 5,
				changeDriver	'assets/hub_icons.png' 		66px  66px  1 2 5,
				profile			'assets/hub_icons.png' 		66px  66px  0 2 5,
				lock			'assets/hub_icons.png' 		66px  66px  0 0 5,
				unlock			'assets/hub_icons.png' 		66px  66px  0 0 5,
				clickArrow		'assets/hub_icons.png' 		66px  66px  4 4 5,
				next			'assets/arrowLight.png' 	20px  30px  0 0 1,
				check			'assets/certifications.png' 130px 98px  0 0 2,
				cross			'assets/certifications.png' 130px 98px  1 0 2,
				triangle		'assets/arrow_down.png' 	81px  46px  0 0 1,
				divSmall		'assets/arrow_divider.png'  44px  100% 0 0 1,
				divBigDark		'assets/arrow-divBigDark.png'	76px 340px 0 0 1,
				divBigLight		'assets/arrow-divBigLight.png'	76px 340px 0 0 1);
				
$input:		  	(email 	  'assets/input_email.png'    100% $fieldHeight 0 0 white black   false black,
				 password 'assets/input_password.png' 100% $fieldHeight 0 0 white black   false black,
				 submit   'assets/#.png'              100% $fieldHeight 0 0 white transparent true #318756);

/* General Mixin */
@mixin resp-to($property, $normal, $responsive) {
    #{$property}: $normal;
    @media only screen and (max-width: $breakpoint ) { 
    	#{$property}: $responsive;
    }
}
 
@mixin resp-ratio($property, $value, $ratio:$ratioGeneral) {
	#{$property}: $value;

	@media only screen and (max-width: $breakpoint) { 
		@if $value == 100%{	
			#{$property}: 100%;
		}@else{
			#{$property}: $value*$ratio;
		}
	}
}

@mixin box-shadow($height: 5px, $shadow_value:$shadow) {
	@include resp-to("-webkit-box-shadow",0px $height $shadow_value, 0px $height*$ratioGeneral $shadow_value );
	@include resp-to("-moz-box-shadow",	  0px $height $shadow_value, 0px $height*$ratioGeneral $shadow_value );
	@include resp-to("box-shadow",		  0px $height $shadow_value, 0px $height*$ratioGeneral $shadow_value );
}

@mixin icon($url,$width,$height,$xPosition,$yPosition,$nbIcon){
	background-image: url($url);
	@if $nbIcon == 1{
		background-size: cover;
	}@else{
		background-size:100%*$nbIcon;
	}
	background-repeat:no-repeat;

	@include resp-ratio("width", $width);
	@include resp-ratio("height", $height);
	
	@include resp-to("background-position", 
					($xPosition*(-$width)) ($yPosition*(-$height)),
					($xPosition*(-$width))*$ratioGeneral ($yPosition*(-$height))*$ratioGeneral);
}

@mixin divider-icon($width){
	position:absolute;
	top: 0px;
	@include resp-ratio("right",-$width/2);
}

@mixin input($url,$width,$height,$xPosition,$yPosition, $color, $background_color, $isSubmit , $border_color){
	background-image: url($url);
	background-size: contain;
	background-repeat:no-repeat;
	background-color: $background_color;
	
	width: 100%;
	@include resp-ratio("height", $height);
	
	input{
		color: $color;
		background: transparent;
		
		font-family: inherit;
		font-size: inherit;
		
		outline: none;
		border:none;
	}

	input[type=text], input[type=password]{
		float: left;
		left: 0px;
		
		width: 70%;
        height: auto;
        padding-top: 0px;
        @include resp-ratio("margin-top", 36px);
		@include resp-ratio("padding-left", 116px);
        line-height: 100%;
                    
	}
	input[type=submit]{
		width: 100%;
		//@include resp-ratio("height", 114px);
		border-top: thin solid $border_color;
        background: -webkit-gradient(linear, left top, left bottom, from($darkGreen), to($darkGreen));
        background: -moz-linear-gradient(top,  $darkGreen,  $darkGreen);
        background-color: $darkGreen;
        @include resp-ratio("padding-top", 38px);
        @include resp-ratio("padding-bottom", 28px);
        border-radius: 0px;
        @include resp-ratio("border-top-width", 4px);
	}
}

@mixin horizontalCentred(){
	margin-left: auto;
	margin-right: auto;
}

@mixin verticalCentred(){
    display: -webkit-box;
    -webkit-box-pack: center;
    -webkit-box-align: center;
    /* Firefox */
    display: -moz-box;
    -moz-box-pack: center;
    -moz-box-align: center;
    /* IE */
    display: -ms-box;
    -ms-box-pack: center;
    -ms-box-align: center;
     /* Native CSS */
    display: box;
    box-pack: center;
    box-align: center;
}

@mixin field($color,$isShadow) {
	@include resp-ratio("padding", $fieldPadding);
    @include resp-ratio("padding-bottom", $fieldPaddingBottom);
        
	background-color: $color;
	text-shadow: 0px -1px $shadow;
	
	@if $isShadow == true {
		@include box-shadow();
    }
	position: relative;
}

@mixin arrow($width, $height, $direction, $color){
	width: 0; height: 0;
	$pattern: (/*border-top border-bottom border-right border-left*/);
	@if   	 $direction == top 	 { $pattern: (0px       $height   $width/2 $width/2 bottom); }
	@else if $direction == bottom{ $pattern: ($height   0px       $width/2 $width/2 top); 	 }
	@else if $direction == right { $pattern: ($height/2 $height/2 0px      $width   left);   }
	@else if $direction == left  { $pattern: ($height/2 $height/2 $width   0px      right);  }
	
	border-top:    nth($pattern, 1) solid transparent;
	border-bottom: nth($pattern, 2) solid transparent;
	border-right:  nth($pattern, 3) solid transparent;
	border-left:   nth($pattern, 4) solid transparent;

	border-#{nth($pattern, 5)}-color: $color;  
}

@mixin fontYellow() {
    font-family: $fontFamilyPlain;
    @include resp-ratio('font-size',$fontSize2 * $fontSizeDefault);
}

@mixin fontGreen() {
    font-family: $fontFamilyBold;
    @include resp-ratio('font-size',$fontSize3 * $fontSizeDefault);
}

@mixin fontRed() {
    font-family: $fontFamilyPlain;
    @include resp-ratio('font-size',$fontSize3 * $fontSizeDefault);
}

@mixin fontBlue() {
    font-family: $fontFamilyBold;
    @include resp-ratio('font-size',$fontSize1 * $fontSizeDefault);
}

@mixin fontPink() {
    font-family: $fontFamilyPlain;
    @include resp-ratio('font-size',$fontSize1 * $fontSizeDefault);
}

@mixin fontPurple() {
    font-family: $fontFamilyPlain;
    @include resp-ratio('font-size',$fontSize3 * $fontSizeDefault);
}

@mixin fontUnity() {
    font-family: $fontFamilyPlain;
    @include resp-ratio('font-size',$fontSize4 * $fontSizeDefault);
}

@mixin fontValue() {
    font-family: $fontFamilyBold;
    @include resp-ratio('font-size',$fontSize5 * $fontSizeDefault);
}


* {
    -webkit-tap-highlight-color: rgba(0, 0, 0, 0) !important;  
}

html, body{
	width: 100%;
	max-width: 100%;
	min-height:100%;
	padding:0px;
	margin: 0px;

  	overflow: hidden;
	background-color:$extendMenuBackground;
	
	color: white;
	@include fontBlue();

	text-align : center;
	vertical-align: midle;	
	
	a{
		display:block;
		text-decoration:none;
		color: inherit;
	}

	input{
		//-webkit-user-modify: read-write-plaintext-only;
	}
}
 
body {
    @include resp-ratio("margin-top", 82px);
}

/* Container */
@each $type in $backgrounds{
	.container-#{nth($type, 1)} {
		@include resp-ratio("padding",$mainPadding);
		background-color: nth($type, 2);
	}	
}

.container-green{
	padding-bottom:100%;
	background-image: url(assets/login_highlight.png);
	background-size: cover;
}

.container-logo{
	background-image: url(assets/dashboard_logo.png);
	background-repeat: no-repeat;
	background-position: bottom;
	background-size: contain;
	padding-bottom:50%;
}

@each $size in (normal 30px, big 40px, huge 60px){
	.container-#{nth($size, 1)} {
		@include resp-ratio("padding-top", nth($size, 2));
	}
}

/* Input */
@each $i in $input{ 
	.input_#{nth($i, 1)} {
		@include input(nth($i,2), nth($i,3), nth($i,4), nth($i,5), nth($i,6), nth($i,7), nth($i,8), nth($i,9), nth($i,10));
	}
}

.input_password, .input_submit {
    box-shadow: 0px 2px rgba(0,0,0,0.15);
}

/* Icons */
@each $i in $icons{ 
	.#{nth($i, 1)}-icon {
		@include icon(nth($i,2), nth($i,3), nth($i,4), nth($i,5), nth($i,6), nth($i,7));
	}
}

.triangle-icon{
	display:inline-block;
}

.arrow-icon-next{
	@extend .next-icon;
	position: absolute;
	top: 50%;
	@include resp-ratio("margin-top",-15px); // 15px = height of icon
	@include resp-ratio("right",$fieldPadding);
}

.header-logo-signin {
	@include horizontalCentred();
	display:block;
	width:80%;
	//height: 15.37%;
}

/* Color */
@each $color in (red $red, green $green, white white, black black){
	.#{nth($color,1)}-txt{
		color:nth($color,2);
	}
	.#{nth($color,1)}-back{
		background-color: nth($color,2);
	}
}


/* Loading Page */
.loadingView{
	visibility:hidden;
	position: absolute;
	width: 100%;
	top: 50%;
	text-align: center;
}
.popUpView{
	visibility:hidden;
	width: 100%; height: 100%;
	position: fixed;
	top: 0px; left:0px;
	@include verticalCentred();

	$space: $mainPadding;
	.popUp{
		width: 90%;
		background-color: white;
		.title{
			@include fontBlue();
			@include resp-ratio("padding-top", 2*$space);
			@include resp-ratio("margin-bottom", 2*$space - $space/1.5);
			text-transform:uppercase;
		}
		.content{
			@include fontBlue();
			@include resp-ratio("margin-top", $space/1.5);
			@include resp-ratio("margin-bottom", 2*$space - $space/1.5);
			@include resp-ratio("padding-right", $space/1.5);
			@include resp-ratio("padding-left", $space/1.5);
		}
		.buttons{
			width: 100%;
			@include resp-ratio("border-spacing", $space/1.5);
			tr > *{
				width: 50%;
			}			
		}
	}
}
/* Menu */
.menu-bar{
	@include fontYellow();
	text-shadow: 0px 1px $shadow;
	
	@include resp-ratio("padding-bottom", 18px);
	line-height: 100%;
	@include resp-ratio("padding-top", 32px);
	
	background-color: $menuBackground;
	border-top: 2px solid $extendMenuBackground ;

	text-transform:uppercase;
    position: fixed;
    top: 0px;
    right: 0px;
    left: 0px;
    @include resp-ratio("height",34px);
    @include box-shadow(4px,$shadow);
    z-index: 1000;

	> div{
        @include fontGreen();
		position:absolute;
		top: 0px;
		border-top: 0px solid $extendMenuBackground ;
		> div{
            @include resp-ratio("margin", 30px);
			@include resp-ratio("margin-top", 10px);
            @include resp-ratio("margin-bottom", 8px);
		}
	}

	> div:last-child{
		right:0px;
	}
	
	.selected{
		background-color:$extendMenuBackground;
	}
	
	@each $color in (blue $blue, red $red, green $green){
		.#{nth($color, 1)}-text {
			color: nth($color, 2);
			@include resp-ratio("padding", $mainPadding);
		}
	}
}

#extendMenu{
	background-color: transparent;
	text-transform:capitalize;
	position: fixed;
    margin-top: 0px;
    @include resp-ratio('top', 90px);
	width:100%;
	z-index: 2000;
    
    @include fontGreen();
    
	a > div{
		@include resp-ratio("padding-bottom", $mainPaddingBottom);
		@include resp-ratio("padding-top", $mainPadding);
		@include resp-ratio("padding-left", 120px);
		
		text-align: left;
		//@include resp-ratio("line-height", 66px);
        line-height: 100%;

		position:relative;
		
		background-color:$extendMenuBackground;
		border-bottom:thin solid #3a3a46;
        border-top: thin solid #5b5b68;
		> div {
			position:absolute;
			//@include resp-ratio("top", $mainPadding);
            @include resp-ratio("top", 16px);
			@include resp-ratio("left", $mainPadding);
		}
	}
	a:last-child > div{		
		border-radius: 0px 0px 10px 10px;
		border-bottom:none;
        @include box-shadow(4px,$shadow);
	}
    
	.selected{
		background-color: nth(nth($backgrounds,2),2);
	}
}

/* field */
@each $color in (blue $blue, red $red, yellow $yellow, green $green){
	.info-field-#{nth($color, 1)} {
		@include field(black, true);
		border-left: medium solid nth($color, 2);
        overflow: hidden;
		@include resp-ratio('min-height',$fontSize1*$fontSizeDefault);
		@if nth($color,1) == red{
			Color: $red;
		}	
	}
}
@each $color in (blue $blue, red $red, green $green, grey #7b7b80){
	.info-title-#{nth($color, 1)} {
		@include field(nth($color, 2), false);
		border-top: 0px solid lighten(nth($color, 2), 12%);
		@include resp-ratio('min-height',$fontSize1*$fontSizeDefault);
	}
}
@each $color in (blue $blue, red $red, green $green, grey #7b7b80){
	.button-#{nth($color, 1)} {
		@include field(nth($color, 2), false);
		text-align: center;
        border-top: medium solid lighten(nth($color, 2), 12%);
		@include resp-ratio('min-height',$fontSize1*$fontSizeDefault);
	}
}
@each $color in (red $red, yellow $yellow, black white, white white){
	.info-text-#{nth($color, 1)} {
		@include field(black, true);
		color: nth($color, 2);
		@include resp-ratio('min-height',$fontSize1*$fontSizeDefault);
        
        @if nth($color,1) == yellow {
			text-align: left;
            text-transform: uppercase;
		}	
	}
}

@each $color in (blue $blue, black black){
	.flat-field-#{nth($color, 1)} {
		@include field(nth($color,2), false);
		@include resp-ratio('min-height',$fontSize1*$fontSizeDefault);
	}
}

.multiple-line-text{
	@include resp-ratio("line-height", 30px);
    @include resp-ratio("padding-left", 60px);
    @include resp-ratio("padding-right", 60px);
}

.uppercase{
	text-transform:uppercase;
}


.adress-field{
	@extend .multiple-line-text;
	background-color: black;
	@include resp-ratio("padding", 60px);
}

@each $size in (sticky 4px, small 8px, normal 15px, big 20px, huge 60px){
	.bottomSpace-#{nth($size, 1)} {
		@include resp-ratio("margin-bottom", nth($size, 2));
	}
}

.simple-text-button{
	color: $grey;
    @include fontRed();
	text-shadow: 0px -2px 0px $shadow;
}

/* Header */
.header-title{
	@include fontPurple();
    @include resp-ratio("padding-top", 20px);
	text-shadow: 0px -1px $shadow;
}

@each $i in $header-icons{ 
	.header-icon-#{nth($i, 1)} {
		@include icon(nth($i,2), nth($i,3), nth($i,4), nth($i,5), nth($i,6), nth($i,7));
		@include horizontalCentred();
	}
}

/* Profile Page */
.unmodifiable{
	color: $grey;
}
.editable{
	position:relative;
	input{
		$height: $fieldLineHeight - 6;

		width: 80%;
		@include resp-ratio("height", $height);
		height:$height;
		padding:0px;
		@include resp-ratio("margin", -6px);
		border: none;

		background-color: transparent;
		color: white;

		text-align:center;
		
		font-size: inherit;
	}
	div{
		position: absolute;
		line-height: 100%;

		@include resp-ratio("right", 30px);
		top: 50%;
        @include resp-ratio("margin-top", -18px);
		@include resp-ratio("font-size",$fieldLineHeight);
	}
}

.swiper-slide img {
    width: 100%;
}

/* Table */
	/** ONE LINE **/
@mixin oneLineTable($titleHeight, $valueHeight, $titleColor,$valueColor, $colone){
	width: 100%;
	border-spacing: 0px 0px;
	@include box-shadow();

	th,td{
		width: (100/$colone) *1%;
		font-weight:normal;
		text-transform:uppercase;
	}
	th{
		@include resp-ratio("height",$titleHeight);
		// @include resp-ratio("font-size",$fontSize,$ratioFont);
		background-color: $titleColor;
		text-shadow: 0px -1px $shadow;
	}
	td{
		@include resp-ratio("height",$valueHeight);
		background-color: $valueColor;
	}
}

		/*** normal (les verts) ***/ 
.info-table {
	@include oneLineTable(90px, 134px, $green, black, 3);
}
@each $type in $backgrounds{ 
	.container-#{nth($type, 1)} .info-table{  
		th:nth-child(even),td:nth-child(even){
			border-left: medium solid nth($type, 2);
			border-right: medium solid nth($type, 2);
		}
	}
}

		/*** arrow ***/
@each $color in (blue $blue, purpel $purpel){
	.info-table-arrow-#{nth($color,1)}{
		@include oneLineTable(114px, 216px, nth($color,2),black, 2);
		
		th:nth-child(1){
			position: relative;
		}
		td{
			@include fontValue();
		}
		.unite{
			@include fontUnity();
		}
	}
	@each $bg in (Dark Light){
		.container-#{$bg} .info-table-arrow-#{nth($color,1)}{
			.arrow-icon{
				@extend .divBig#{$bg}-icon;
				@include divider-icon(76px); // 114 = width of the icon
			}
		}
	}
}

		/*** Adresse table ***/
.adress-table{
	@include oneLineTable(0px, $fieldHeight, black, black, 3);
	caption{
		@extend .adress-field;
	}	
}
@each $type in $backgrounds{ 
	.container-#{nth($type, 1)} .adress-table{  
		caption{
			border-bottom: medium solid nth($type, 2); 
		}
		td:nth-child(even){
			border-left: medium solid nth($type, 2);
			border-right: medium solid nth($type, 2);
		}
	}
}

	/** MULTIPLE LINE **/
@mixin multipleLineTable($color){
	width: 100%;
	border-spacing: 0px 0px;
	@include box-shadow();
	
	tr{
		background-color: black;
	}

	tr > *{
		background-color: transparent;
		font-weight:normal;
		text-transform:uppercase;
		
		@include resp-ratio("line-height", $fieldLineHeight + 2* $fieldPadding);
		
		padding:0px;
		@include resp-ratio("padding-left", $fieldPadding);
	}

	caption{
		@include field($color, false);
		text-shadow: 0px -1px 0px $shadow;
	}
}

		/*** checkBox-table ***/
.checkBox-table{
	@include multipleLineTable($green);
	th{
		text-align:left;
	}
	td{
		padding:0px;
        @include resp-ratio('min-width',130px);
	}
	.check-icon, .cross-icon{
		@include horizontalCentred();
	}
}
@each $type in $backgrounds{ 	
	.container-#{nth($type, 1)} .checkBox-table{ 
		tr > *{
			border-top: medium solid nth($type, 2);
		}
		tr:first-child > *{
			border-top: 0px;		
		}
		tr td:nth-child(even){
			border-left: medium solid nth($type, 2);
			border-right: medium solid nth($type, 2);
		}
	}
}


/*** Arrow-table ***/
.arrow-table{
	@include multipleLineTable($green);
	tr > *{
		position: relative;	
		width: 50%;
        line-height: 100%;
        @include resp-ratio('padding-top', 48px);
        @include resp-ratio('padding-bottom', 40px);
        text-align: center;
        @include resp-ratio('height', 32px);
	}
	th{
		text-align:left;
	}
    th.center {
        text-align: center;
        @include resp-ratio('padding-right', 40px);
    }
    td.center {
        @include resp-ratio('padding-right', 30px);
    }
}
.big-title{
	th{
		width: 60%;
	}
	td{
		width: 40%;
	}
}
@each $type in $backgrounds{ 
	.container-#{nth($type, 1)} .arrow-table{
		.arrow-icon{
			@extend .divSmall-icon;
			@include divider-icon(32px); // 32 = width of the icon
            background-color: #0000ff;
		}
		tr > *{
			border-top: medium solid nth($type, 2);
		}
		tr:first-child > *{
			border-top: 0px;	
		}
	}

}

/*** Emergency-table ***/
.emergency-table{
	@include multipleLineTable($orange);
	
	caption{
		text-shadow: 0px 0px 0px $shadow;
		color:black;
	}
	tr > *{
		color: $orange;
		width: 50%;
		@include resp-ratio('padding', $mainPadding);
        line-height: 100%;
	}
    
    .editable {
        text-align: left;
        @include resp-ratio("padding-left", 30px);
    }
    
    input {
        //@include resp-ratio("width",236px);
    }
}

@each $type in $backgrounds{ 
	.container-#{nth($type, 1)} .emergency-table{  
		tr > *:last-child{
			border-left: medium solid nth($type, 2);
		}
	}
}

/* Tabs */
@mixin tab-bar(){
	width: 100%;
	@include resp-ratio("height",80px);
	padding: 0px;
	margin-bottom:0px;
	@include resp-ratio("margin-top",10px);
	margin-top:0px;

	@include resp-to("border-top", 10px solid $extendMenuBackground, 10px *$ratioGeneral solid $extendMenuBackground );
	background-color: $extendMenuBackground;
	
	@include fontPink();
	
	li{
		display: inline-block;	
		@include resp-ratio("height",54px);
		@include resp-ratio("padding-top",26px);
		
		border-radius:10px 10px 0px 0px;
		
		background-color: $grey;
		color: #d0d0d2;
		text-shadow: 0px 2px $shadow;
	}
	li:first-child{
		border-radius:0px 10px 0px 0px;
		float: left;
	}
	li:last-child{
		border-radius:10px 0px 0px 0px;
		float: right;
	}
	@each $type in $backgrounds{ 
		.selected-#{nth($type, 1)} { 
			background-color: nth($type,2);
			color: white;
			text-shadow: 0px -2px $shadow;
		}
	}
}

.tab-bar-2{
	@include tab-bar();
	li {
		width: 49%;
	}
}

.tab-bar-3{
	@include tab-bar();
	li {
		width: 32.5%;
	}
}

.selecteDriverMessage {
    // opacity: 0.7;
    text-shadow: 0px -2px rgba(0,0,0,1);
    @include resp-ratio('margin-top', 90px);
    @include resp-ratio('margin-bottom', 120px);
}

.noData-box{
	@extend .selecteDriverMessage;
	display:none;
	margin:0px;
	opacity:1;
    // @include resp-ratio('padding-top', 90px);
    // @include resp-ratio('padding-bottom', 120px);
}

.info-text-yellow {
    @include resp-ratio('max-height', 80px);
}

.toggle-text-yellow {
    color: $yellow;
    @include resp-ratio('margin-top', -16px);
    display: none;
}

.comment-full {
    display: none;
    max-height: none !important;
}

.sub-blue {
    color: $blue;
    @include resp-ratio('font-size',$fontSize0 * $fontSizeDefault);
}

.no-scroll {
    position: fixed;
    left: 0px;
    right: 0px;
}

.no-shadow-field {
    box-shadow: none !important;
    -moz-box-shadow: none !important;
    -webit-bow-shadow: none !important;
}

